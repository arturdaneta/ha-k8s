- name: Install AWS CLI
  raw: "apt-get -y -q install awscli"
  become: true

- name: Download kubectl binaries
  get_url:
    url: "{{ kubernetes_download_path }}/{{ item }}"
    dest: "/usr/bin"
    group: root
    owner: root
    mode: 0755
  with_items:
    - kubectl
  become: true

- name: Create .kube folder
  file: 
    path: "/home/ubuntu/.kube"
    owner: ubuntu
    state: directory
    recurse: yes
    mode: 0755
  become: true

- name: Add Kubelet configuration client
  template:
    src: kubeconfig.j2
    dest: /home/ubuntu/.kube/config
    mode: 0755
  become: true

# Run kuberctl on local machine to gather kubernetes nodes "facts"
- name: Gather Kubernetes nodes facts
  shell: kubectl get nodes --output=json --output=jsonpath='{range .items[*]}{.status.addresses[?(@.type=="InternalIP")].address},{.spec.podCIDR}{"\n"}{end}'
  register: net
  become: true




- name: Copy kube-dns files
  template:
    src: "{{ item }}.j2"
    dest: "/home/ubuntu/{{ item }}"
    mode: 700
  become: true
  with_items:
    - kube-dns-s.yaml
    - kube-dns-rc.yaml

- name: Apply kube-dns files
  shell: kubectl apply -f /home/ubuntu/{{ item }}
  with_items:
    - kube-dns-s.yaml
    - kube-dns-rc.yaml
  become: true
  become_user: ubuntu



#Find and delete all blackholes
aws ec2 describe-route-tables --route-table-id "{{ kubernetes_route_table_id }}" --filters "Name=route.state,Values=blackhole" --query 'RouteTables[0].Routes[?State == `blackhole`]' | jq -r ".[].DestinationCidrBlock" | while read cidr ; do
    aws ec2 delete-route --route-table-id "{{ kubernetes_route_table_id }}" --destination-cidr-block $cidr
done

#Create route table association
NETWORK_INTERFACE=$(aws ec2 describe-instances --filters "Name=private-ip-address,Values=10.43.17.89" --query 'Reservations[0].Instances[0].NetworkInterfaces[0].NetworkInterfaceId')

aws ec2 create-route --route-table-id "{{ kubernetes_route_table_id }}" --network-interface-id 
aws ec2 create-route --route-table-id "rtb-2f704948" --network-interface-id "eni-892243cb" --destination-cidr-block "10.200.3.0/24"


echo "10.43.12.98,10.200.3.0/24 10.43.17.89,10.200.1.0/24 10.43.42.143,10.200.0.0/24" | tr " " "\n" |  while read item ; do  
  NETWORK_INTERFACE=$(aws ec2 describe-instances --filters "Name=private-ip-address,Values=$(echo $item | cut -d ',' -f 1)" --query 'Reservations[0].Instances[0].NetworkInterfaces[0].NetworkInterfaceId')
  echo "$NETWORK_INTERFACE"
  aws ec2 create-route --route-table-id "rtb-2f704948" --network-interface-id $NETWORK_INTERFACE --destination-cidr-block "$(echo $item | cut -d ',' -f 2)"
done
